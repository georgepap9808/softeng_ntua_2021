{
	"info": {
		"_postman_id": "e21b53bb-3cb8-480f-b2d1-ab5adff917f1",
		"name": "Soft Eng test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Health Check\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							"pm.test(\"Login Test\", function () {\r",
							"    let hash = jsonData.hash;\r",
							"    pm.expect(jsonData.hash).to.eql(\"pbkdf2:sha256:150000$ct5SjfqH$fab44d5e71fafb975f45c5799d5bcc0795d463aae65a0bae9e7b123172630ac6\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"strictSSL": false
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}login?username=markakisn&password=yay123",
					"host": [
						"{{url}}login"
					],
					"query": [
						{
							"key": "username",
							"value": "markakisn"
						},
						{
							"key": "password",
							"value": "yay123"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ProviderByUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: \"https://127.0.0.1:5000/evcharge/api/login?username=markakisn&password=yay123\",\r",
							"    method: 'POST',\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({ key: \"this is json\" })\r",
							"    }\r",
							"}, function (err, res) {\r",
							"    if (err) {\r",
							"        console.log(err)\r",
							"    } else {\r",
							"        const data = res.json();\r",
							"        pm.globals.set(\"tokens\", data.token);\r",
							"        console.log(data.token);\r",
							"    }\r",
							"});\r",
							"\r",
							"const getRequest = {\r",
							"    url: 'https://127.0.0.1:5000/evcharge/api/providerByUser?id=1',\r",
							"    method: 'GET',\r",
							"    header: {\r",
							"        'X-OBSERVATORY-AUTH': data.token\r",
							"    },\r",
							"    body: {\r",
							"        mode: 'raw',\r",
							"        raw: JSON.stringify({ key: 'this is json' })\r",
							"    }\r",
							"};\r",
							"\r",
							"\r",
							"pm.test(\"Health check\", function() {\r",
							"    // pm.response.to.have.header(\"X-OBSERVATORY-AUTH\");\r",
							"    pm.sendRequest(getRequest, (err, res) => {\r",
							"        pm.response.to.have.status(200);\r",
							"        pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"    })\r",
							"});\r",
							"\r",
							"pm.test(\"Token test\", function() {\r",
							"    // pm.response.to.have.header(\"X-OBSERVATORY-AUTH\");\r",
							"    pm.sendRequest(getRequest, (err, res) => {\r",
							"        pm.expect(pm.response.headers.get('X-OBSERVATORY-AUTH')).to.eql(data.token);\r",
							"    })\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-OBSERVATORY-AUTH",
						"value": "{{tokens}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}providerByUser?id=1",
					"host": [
						"{{url}}providerByUser"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		}
	]
}